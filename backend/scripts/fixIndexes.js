const mongoose = require('mongoose');
require('dotenv').config();

const fixIndexes = async () => {
  try {
    console.log('üîó Connexion √† MongoDB...');
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    const db = mongoose.connection.db;

    // Supprimer les anciens index uniques
    console.log('üóëÔ∏è Suppression des anciens index uniques...');
    
    try {
      await db.collection('manifests').dropIndex('numeroManifest_1');
      console.log('‚úÖ Index numeroManifest_1 supprim√©');
    } catch (error) {
      console.log('‚ÑπÔ∏è Index numeroManifest_1 n\'existe pas ou d√©j√† supprim√©');
    }

    try {
      await db.collection('assurances').dropIndex('numeroPolice_1');
      console.log('‚úÖ Index numeroPolice_1 supprim√©');
    } catch (error) {
      console.log('‚ÑπÔ∏è Index numeroPolice_1 n\'existe pas ou d√©j√† supprim√©');
    }

    try {
      await db.collection('visas').dropIndex('numeroDossier_1');
      console.log('‚úÖ Index numeroDossier_1 supprim√©');
    } catch (error) {
      console.log('‚ÑπÔ∏è Index numeroDossier_1 n\'existe pas ou d√©j√† supprim√©');
    }

    try {
      await db.collection('hotelreservations').dropIndex('reference_1');
      console.log('‚úÖ Index reference_1 supprim√©');
    } catch (error) {
      console.log('‚ÑπÔ∏è Index reference_1 n\'existe pas ou d√©j√† supprim√©');
    }

    try {
      await db.collection('reservations').dropIndex('numero_1');
      console.log('‚úÖ Index numero_1 supprim√©');
    } catch (error) {
      console.log('‚ÑπÔ∏è Index numero_1 n\'existe pas ou d√©j√† supprim√©');
    }

    // Recr√©er les nouveaux index compos√©s
    console.log('üîß Cr√©ation des nouveaux index compos√©s...');
    
    await db.collection('manifests').createIndex({ agenceId: 1, numeroManifest: 1 }, { unique: true });
    console.log('‚úÖ Index compos√© manifests cr√©√©');

    await db.collection('assurances').createIndex({ agenceId: 1, numeroPolice: 1 }, { unique: true });
    console.log('‚úÖ Index compos√© assurances cr√©√©');

    await db.collection('visas').createIndex({ agenceId: 1, numeroDossier: 1 }, { unique: true });
    console.log('‚úÖ Index compos√© visas cr√©√©');

    await db.collection('hotelreservations').createIndex({ agenceId: 1, reference: 1 }, { unique: true });
    console.log('‚úÖ Index compos√© hotelreservations cr√©√©');

    await db.collection('reservations').createIndex({ agenceId: 1, numero: 1 }, { unique: true });
    console.log('‚úÖ Index compos√© reservations cr√©√©');

    console.log('üéâ Tous les index ont √©t√© corrig√©s avec succ√®s !');
    console.log('üìù Maintenant chaque agence peut utiliser ses propres r√©f√©rences sans conflit.');

  } catch (error) {
    console.error('‚ùå Erreur lors de la correction des index:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå D√©connect√© de MongoDB');
  }
};

// Ex√©cuter le script
fixIndexes(); 